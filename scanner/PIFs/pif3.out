GO->(47, -1)
def->(35, -1)
numbers->(1, (3, 0))
:->(28, -1)
[->(22, -1)
int->(36, -1)
]->(23, -1)
=->(14, -1)
[->(22, -1)
]->(23, -1)
;->(26, -1)
def->(35, -1)
input->(1, (14, 0))
:->(28, -1)
int->(36, -1)
=->(14, -1)
-1->(0, (15, 0))
;->(26, -1)
def->(35, -1)
sum->(1, (10, 0))
:->(28, -1)
int->(36, -1)
=->(14, -1)
0->(0, (0, 0))
;->(26, -1)
def->(35, -1)
no->(1, (6, 0))
:->(28, -1)
int->(36, -1)
=->(14, -1)
0->(0, (0, 0))
;->(26, -1)
print->(41, -1)
(->(24, -1)
`Input numebrs, type 0 to stop:`->(0, (12, 0))
)->(25, -1)
;->(26, -1)
while->(45, -1)
(->(24, -1)
input->(1, (14, 0))
!=->(15, -1)
0->(0, (0, 0))
)->(25, -1)
{->(20, -1)
print->(41, -1)
(->(24, -1)
`New number: `->(0, (11, 0))
)->(25, -1)
;->(26, -1)
read->(40, -1)
(->(24, -1)
input->(1, (14, 0))
)->(25, -1)
;->(26, -1)
sum->(1, (10, 0))
+=->(16, -1)
input->(1, (14, 0))
;->(26, -1)
no->(1, (6, 0))
+=->(16, -1)
1->(0, (1, 0))
;->(26, -1)
}->(21, -1)
def->(35, -1)
result->(1, (9, 0))
:->(28, -1)
float->(37, -1)
=->(14, -1)
sum->(1, (10, 0))
//->(6, -1)
no->(1, (6, 0))
;->(26, -1)
print->(41, -1)
(->(24, -1)
`Result `->(0, (6, 0))
result->(1, (9, 0))
)->(25, -1)
;->(26, -1)
