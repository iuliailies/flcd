GO->(47, -1)
def->(35, -1)
number->(1, (4, 0))
:->(28, -1)
int->(36, -1)
;->(26, -1)
def->(35, -1)
isPrime->(1, (2, 0))
:->(28, -1)
boolean->(39, -1)
=->(14, -1)
true->(33, -1)
;->(26, -1)
print->(41, -1)
(->(24, -1)
`Add your number: `->(0, (12, 0))
)->(25, -1)
;->(26, -1)
read->(40, -1)
(->(24, -1)
number->(1, (4, 0))
)->(25, -1)
;->(26, -1)
def->(35, -1)
d->(1, (1, 0))
:->(28, -1)
int->(36, -1)
=->(14, -1)
2->(0, (2, 0))
;->(26, -1)
while->(45, -1)
(->(24, -1)
d->(1, (1, 0))
<=->(10, -1)
n->(1, (11, 0))
/->(5, -1)
2->(0, (2, 0))
)->(25, -1)
{->(20, -1)
if->(43, -1)
(->(24, -1)
n->(1, (11, 0))
%->(7, -1)
d->(1, (1, 0))
==->(9, -1)
0->(0, (0, 0))
)->(25, -1)
isPrime->(1, (2, 0))
=->(14, -1)
false->(34, -1)
;->(26, -1)
d->(1, (1, 0))
+=->(16, -1)
1->(0, (1, 0))
;->(26, -1)
}->(21, -1)
print->(41, -1)
(->(24, -1)
isPrime->(1, (2, 0))
==->(9, -1)
true->(33, -1)
?->(27, -1)
number->(1, (4, 0))
` is prime.`->(0, (11, 0))
:->(28, -1)
number->(1, (4, 0))
` is not prime.`->(0, (1, 1))
)->(25, -1)
;->(26, -1)
